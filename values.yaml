#replicaCount: 5
deployment:
  replicas: 1
  revisionHistoryLimit: 0 #set to 0 not to have dangling replica sets after pod terminations

#revisionHistoryLimit: 0

image:
  repository: alexf87/ollama31
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0"
#imagePullSecrets:
# - name: regcred
image2:
  repository: alexf87/webuitandem
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0"
#imagePullSecrets:
# - name: regcred


resources: 
    limits:
      cpu: "4000m"
      memory: "4G"
      nvidia.com/gpu: 1
    requests:
      cpu: "1000m"
      memory: "3G"
      nvidia.com/gpu: 1


nameOverride: ""
fullnameOverride: ""
runtimeClassName: nvidia # MUST HAVE !!! Else gpu in pod is present, but not usable !!

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 11434

service2:
  type: ClusterIP
  port: 8080
  name: webui
#  portweb: 80
#ingress:
#  enabled: true
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    cert-manager.io/cluster-issuer: letsencrypt-prod  # Change to your cluster issuer name
#  hosts:
#    - host: llm.stratocloud.eu  # Change to your desired domain
#      paths:
#        - path: /
#          pathType: Prefix
#  tls:
#    - secretName: hello-kubernetes-tls  # Change to your desired secret name
#      hosts:
#        - llm.stratocloud.eu  # Change to your desired domain

ingress:
  enabled: true

  annotations: {
    kubernetes.io/ingress.class: nginx ,
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300',
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300' }
#    kubernetes.io/service-upstream: lama3-lama-chart
    
#    cert-manager.io/cluster-issuer: letsencrypt-prod  # Change to your cluster issuer name
  hosts:
    - host: llm3.stratocloud.eu  # Change to your desired domain
      paths:
        - path: /
          pathType: Prefix



livenessProbe:
  initialDelaySeconds: 30
  httpGet:
    path: /
    port: 11434
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

    
readinessProbe:
  initialDelaySeconds: 20
  httpGet:
    path: /
    port: 11434
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1


livenessProbe2:
  initialDelaySeconds: 30
  httpGet:
    path: /
    port: 8080
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

    
readinessProbe2:
  initialDelaySeconds: 20
  httpGet:
    path: /
    port: 8080
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1




  
    

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 85
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60
# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  nvidia.com/gpu.count: '1'

tolerations: []

affinity: {}

#args: "--gpus=all"
